% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zzz.r
\name{VCFReader}
\alias{VCFReader}
\title{VCFReader object}
\description{
A `VCFReader` is a reference object created by openVCF that enables fast, memory-efficient iteration through
a VCF file (Variant Call Format), optionally restricted to genomic regions.

The `VCFReader` acts like a streaming interface to the file, exposing functions such as:
\itemize{
  \item \link{VCFnext}: move to the next variant record
  \item \link{getLine}: retrieve genotype and variant data at the current position
  \item \link{getSamples}: get sample IDs
  \item \link{getFormats}: list available FORMAT fields
  \item \link{getChroms}: list chromosome names
  \item \link{getRegions}: return queried genomic regions
}
}
\details{
The `VCFReader` holds an external pointer to a C++ stream. You must use VCFnext before calling getLine,
and iterate until VCFnext returns `FALSE`.

Genomic regions (if any) must match the indexing of the tabix file associated with the VCF.
}
\section{Internals}{

Internally, a `VCFReader` is an S3 object â€” a list with:
\itemize{
  \item `filename`: the path to the VCF file
  \item `xptr`: an external pointer to the native reader object
}
You typically do not access these fields directly.
}

\examples{
filename <- system.file("extdata", "example.vcf.gz", package = "readVCF")
reader <- openVCF(filename, regions = "19:320000-700000")

# Iterate over the first few lines and print genotype values
i <- 0
while (VCFnext(reader) && i < 3) {
  line <- getLine(reader, "GT")
  cat("Line", i + 1, ":\n")
  print(line$values)
  i <- i + 1
}

}
\seealso{
\link{openVCF}, \link{VCFnext}, \link{getLine}, \link{getFormats}, \link{getSamples}, \link{getChroms}, \link{getRegions}
}
\keyword{internal}
